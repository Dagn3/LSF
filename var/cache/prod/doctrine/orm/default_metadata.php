<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__Lait__CLASSMETADATA__' => 0,
'App__Entity__User__CLASSMETADATA__' => 1,
'App__Entity__Provenance__CLASSMETADATA__' => 2,
'App__Entity__Message__CLASSMETADATA__' => 3,
'App__Entity__Pate__CLASSMETADATA__' => 4,
'App__Entity__Label__CLASSMETADATA__' => 5,
'App__Entity__Fromage__CLASSMETADATA__' => 6,
'Vich__UploaderBundle__Entity__File__CLASSMETADATA__' => 7,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Lait',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Lait',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\LaitRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'Nom' => [
                            'fieldName' => 'Nom',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'nom',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'Nom',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'Nom' => 'nom',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'lait',
                    ],
                ],
                'associationMappings' => [
                    [
                        'fromages' => [
                            'fieldName' => 'fromages',
                            'joinTable' => [],
                            'targetEntity' => 'App\\Entity\\Fromage',
                            'mappedBy' => 'Lait',
                            'inversedBy' => null,
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 8,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Lait',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\User',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\User',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UserRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'Pseudo' => [
                            'fieldName' => 'Pseudo',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 180,
                            'unique' => true,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'pseudo',
                        ],
                        'roles' => [
                            'fieldName' => 'roles',
                            'type' => 'json',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'roles',
                        ],
                        'password' => [
                            'fieldName' => 'password',
                            'type' => 'string',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'password',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'pseudo' => 'Pseudo',
                        'roles' => 'roles',
                        'password' => 'password',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'Pseudo' => 'pseudo',
                        'roles' => 'roles',
                        'password' => 'password',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'user',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Provenance',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Provenance',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ProvenanceRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'departement' => [
                            'fieldName' => 'departement',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'departement',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'departement' => 'departement',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'departement' => 'departement',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'provenance',
                    ],
                ],
                'associationMappings' => [
                    [
                        'fromages' => [
                            'fieldName' => 'fromages',
                            'mappedBy' => 'Provenance',
                            'targetEntity' => 'App\\Entity\\Fromage',
                            'cascade' => [
                                'remove',
                            ],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Provenance',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Message',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Message',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\MessageRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'email' => [
                            'fieldName' => 'email',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'email',
                        ],
                        'objet' => [
                            'fieldName' => 'objet',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'objet',
                        ],
                        'commentaire' => [
                            'fieldName' => 'commentaire',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'commentaire',
                        ],
                        'date' => [
                            'fieldName' => 'date',
                            'type' => 'date',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'date',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'objet' => 'objet',
                        'commentaire' => 'commentaire',
                        'date' => 'date',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'objet' => 'objet',
                        'commentaire' => 'commentaire',
                        'date' => 'date',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'message',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Pate',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Pate',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\PateRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'nom' => [
                            'fieldName' => 'nom',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'nom',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'pate',
                    ],
                ],
                'associationMappings' => [
                    [
                        'fromages' => [
                            'fieldName' => 'fromages',
                            'mappedBy' => 'Pate',
                            'targetEntity' => 'App\\Entity\\Fromage',
                            'cascade' => [
                                'remove',
                            ],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Pate',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Label',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Label',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\LabelRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'nom' => [
                            'fieldName' => 'nom',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'nom',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'label',
                    ],
                ],
                'associationMappings' => [
                    [
                        'fromages' => [
                            'fieldName' => 'fromages',
                            'joinTable' => [],
                            'targetEntity' => 'App\\Entity\\Fromage',
                            'mappedBy' => 'label',
                            'inversedBy' => null,
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 8,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Label',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Fromage',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Fromage',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\FromageRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'nom' => [
                            'fieldName' => 'nom',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'nom',
                        ],
                        'prix' => [
                            'fieldName' => 'prix',
                            'type' => 'decimal',
                            'scale' => 10,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 2,
                            'columnName' => 'prix',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'description',
                        ],
                        'image' => [
                            'fieldName' => 'image',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'image',
                        ],
                        'slug' => [
                            'fieldName' => 'slug',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'slug',
                        ],
                        'display' => [
                            'fieldName' => 'display',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'display',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'prix' => 'prix',
                        'description' => 'description',
                        'image' => 'image',
                        'slug' => 'slug',
                        'display' => 'display',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'prix' => 'prix',
                        'description' => 'description',
                        'image' => 'image',
                        'slug' => 'slug',
                        'display' => 'display',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'fromage',
                    ],
                ],
                'associationMappings' => [
                    [
                        'Lait' => [
                            'fieldName' => 'Lait',
                            'joinTable' => [
                                'name' => 'fromage_lait',
                                'joinColumns' => [
                                    [
                                        'name' => 'fromage_id',
                                        'referencedColumnName' => 'id',
                                        'onDelete' => 'CASCADE',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'lait_id',
                                        'referencedColumnName' => 'id',
                                        'onDelete' => 'CASCADE',
                                    ],
                                ],
                            ],
                            'targetEntity' => 'App\\Entity\\Lait',
                            'mappedBy' => null,
                            'inversedBy' => 'fromages',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 8,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Fromage',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'fromage_id',
                                'lait_id',
                            ],
                            'isOnDeleteCascade' => true,
                            'relationToSourceKeyColumns' => [
                                'fromage_id' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'lait_id' => 'id',
                            ],
                        ],
                        'label' => [
                            'fieldName' => 'label',
                            'joinTable' => [
                                'name' => 'fromage_label',
                                'joinColumns' => [
                                    [
                                        'name' => 'fromage_id',
                                        'referencedColumnName' => 'id',
                                        'onDelete' => 'CASCADE',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'label_id',
                                        'referencedColumnName' => 'id',
                                        'onDelete' => 'CASCADE',
                                    ],
                                ],
                            ],
                            'targetEntity' => 'App\\Entity\\Label',
                            'mappedBy' => null,
                            'inversedBy' => 'fromages',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 8,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Fromage',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'fromage_id',
                                'label_id',
                            ],
                            'isOnDeleteCascade' => true,
                            'relationToSourceKeyColumns' => [
                                'fromage_id' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'label_id' => 'id',
                            ],
                        ],
                        'Pate' => [
                            'fieldName' => 'Pate',
                            'joinColumns' => [
                                [
                                    'name' => 'pate_id',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'fromages',
                            'targetEntity' => 'App\\Entity\\Pate',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Fromage',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'pate_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'pate_id' => 'pate_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'pate_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'Provenance' => [
                            'fieldName' => 'Provenance',
                            'joinColumns' => [
                                [
                                    'name' => 'provenance_id',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'fromages',
                            'targetEntity' => 'App\\Entity\\Provenance',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Fromage',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'provenance_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'provenance_id' => 'provenance_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'provenance_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Vich\\UploaderBundle\\Entity\\File',
                ],
                'namespace' => [
                    'Vich\\UploaderBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Vich\\UploaderBundle\\Entity\\File',
                ],
                'isEmbeddedClass' => [
                    true,
                ],
                'fieldMappings' => [
                    [
                        'name' => [
                            'fieldName' => 'name',
                            'nullable' => true,
                            'type' => 'string',
                            'columnName' => 'name',
                        ],
                        'originalName' => [
                            'fieldName' => 'originalName',
                            'columnName' => 'original_name',
                            'nullable' => true,
                            'type' => 'string',
                        ],
                        'mimeType' => [
                            'fieldName' => 'mimeType',
                            'columnName' => 'mime_type',
                            'nullable' => true,
                            'type' => 'string',
                        ],
                        'size' => [
                            'fieldName' => 'size',
                            'type' => 'integer',
                            'nullable' => true,
                            'columnName' => 'size',
                        ],
                        'dimensions' => [
                            'fieldName' => 'dimensions',
                            'type' => 'simple_array',
                            'nullable' => true,
                            'columnName' => 'dimensions',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'name' => 'name',
                        'original_name' => 'originalName',
                        'mime_type' => 'mimeType',
                        'size' => 'size',
                        'dimensions' => 'dimensions',
                    ],
                ],
                'columnNames' => [
                    [
                        'name' => 'name',
                        'originalName' => 'original_name',
                        'mimeType' => 'mime_type',
                        'size' => 'size',
                        'dimensions' => 'dimensions',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'file',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
